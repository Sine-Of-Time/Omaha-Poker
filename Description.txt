The following is an desc of the code in this repo to help understand the code.
First I will go over the Macro's.
1.Macros
#define MAX_COMBINATIONS 60 was created as in Omaha poker, each player is dealt 4 cards,
and the user must use 2 cards along with the 3 out of the 5 community cards to form an 5-card hand.
The total possible combos of cards in an players hand can then based on this be calculated to be 60.

#define BIT(n) (1UL << (n)) was created to generate an unsign long vlaue with only the bit at n being set.
An example of this would be BIT(3) which when counting from zero changed the 4th bit to 1

#define IS_SET(n,v) ((v) & BIT(n)) uses an bitwise AND and BIT(n) to check if the bit at
n is set to value v.

#define BIT_SET(n,v) ((v) |= BIT(n)) uses bitwise OR assignment to update the bit at n with the value of v

2.Enums
enum Value is used to represent the rank of cards by assigning cards an value of 1 for ONE, two for 2 and so on. It can be noted ACE is mapped to 14. This is how cards are referenced.

enum suit simply maps each suit to an value of Club=0, ... Spade =3

3.Structs
struct card is designed to represent an single card with an enum val and enum suit

struct hand is designed to represent an hand where card array holds 5 cards, card_count holds the freq of each card rank in the hand where 2 is the two card thru Ace. If an hand contains two aces, then the value for ace is 2 and so on  

struct player is used to represent all possible 60 5-card hands an player can have from their 4 cards and the 5 community cards and also the based hand the player can have based on current cards which is called 
